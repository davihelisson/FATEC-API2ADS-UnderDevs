/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package application;

import entities.OllamaInterface;
import entities.Prompts;
import javax.swing.JFrame;
import javax.swing.*;
import java.awt.*;
import java.io.*;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author UnderDevs DevTeam
 */
public class ApiInterface extends javax.swing.JFrame {
    
    private String nomeArquivoAberto;

    /**
     * Creates new form ApiInterface
     */
    public ApiInterface() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        TxtPrompt = new javax.swing.JTextPane();
        btnAbrir = new javax.swing.JButton();
        btnSalvar2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnSalvar3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 153));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFont(new java.awt.Font("Arial Narrow", 0, 10)); // NOI18N
        setForeground(new java.awt.Color(102, 102, 102));
        setIconImages(null);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        TxtPrompt.setBorder(null);
        TxtPrompt.setCaretColor(new java.awt.Color(102, 102, 102));
        TxtPrompt.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane1.setViewportView(TxtPrompt);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 744;
        gridBagConstraints.ipady = 424;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(jScrollPane1, gridBagConstraints);

        btnAbrir.setText("Abrir");
        btnAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        getContentPane().add(btnAbrir, gridBagConstraints);

        btnSalvar2.setText("Create Test");
        btnSalvar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvar2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 8, 0, 0);
        getContentPane().add(btnSalvar2, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("PMingLiU-ExtB", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 153, 153));
        jLabel1.setText("UNDERDEVS IDE");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 348, 0, 0);
        getContentPane().add(jLabel1, gridBagConstraints);

        btnSalvar3.setText("Salvar");
        btnSalvar3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvar3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 8, 0, 0);
        getContentPane().add(btnSalvar3, gridBagConstraints);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAbrirActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnAbrirActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        // Para abrir apenas arquivo de .py
        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Arquivos Python (*.py)", "py"));
        Component frame = null;

        // Mostrar o diálogo de abertura de arquivo
        int returnValue = fileChooser.showOpenDialog(frame);

        //  Caso um arquivo seja selecionado : 
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            diretorioSelecionado = file.getParent();
            nomeArquivoAberto = file.getName().replace(".py", ""); //Salva o nome do arquivo sem a extensão do pythonm
            
            
            BufferedReader reader = null;
            try {
                reader = new BufferedReader(new FileReader(file));
            } catch (FileNotFoundException ex) {
                Logger.getLogger(ApiInterface.class.getName()).log(Level.SEVERE, null, ex);
            }
            String linha;
            StringBuilder conteudo = new StringBuilder();
            try {
                while ((linha = reader.readLine()) != null) {
                    conteudo.append(linha).append("\n");
                }
            } catch (IOException ex) {
                Logger.getLogger(ApiInterface.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                reader.close();
                TxtPrompt.setText(conteudo.toString());
            } catch (IOException ex) {
                Logger.getLogger(ApiInterface.class.getName()).log(Level.SEVERE, null, ex);
            }
            // Exibir o conteúdo do arquivo em um JTextArea
            JTextArea textArea = new JTextArea(conteudo.toString());
            textArea.setEditable(true);
            JScrollPane scrollPane = new JScrollPane(textArea);
            JFrame contentFrame = new JFrame("Conteúdo do Arquivo");
            contentFrame.setSize(600, 400);
            contentFrame.add(scrollPane);
            contentFrame.setVisible(false);
        }
    }// GEN-LAST:event_btnAbrirActionPerformed
    
    private String diretorioSelecionado;
    
    

    private void btnSalvar3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSalvar3ActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        // Esse if é utilizado para detectar e preencher automaticamente onde irá seu arquivo ao clicar no botão salvar, usando o mesmo diretorio em que ele foi retirado;
        if (diretorioSelecionado != null){
            fileChooser.setCurrentDirectory(new File(diretorioSelecionado));
        }
        // Define o nome do arquivo com o nome do arquivo carregado 
        if (nomeArquivoAberto != null && !nomeArquivoAberto.isEmpty()){
            fileChooser.setSelectedFile(new File(diretorioSelecionado, nomeArquivoAberto + ".py"));
        }
        
        fileChooser.setDialogTitle("Salvar Arquivo");
        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Python Files", "py"));
        Component frame = null;

        int userSelection = fileChooser.showSaveDialog(frame);

        // Verificar se o usuário clicou em "Salvar"
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();

            // Se o arquivo não tem a extensão .py, adicionar manualmente
            if (!fileToSave.getAbsolutePath().endsWith(".py")) {
                fileToSave = new File(fileToSave.getAbsolutePath() + ".py");
            }

            try (BufferedWriter writer = new BufferedWriter(new FileWriter(fileToSave))) {
                // Escrever conteúdo no arquivo .py
                String content = TxtPrompt.getText();
                writer.write(content);
                JOptionPane.showMessageDialog(frame, "Arquivo salvo com sucesso!");
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(frame, "Erro ao salvar o arquivo.", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }// GEN-LAST:event_btnSalvar3ActionPerformed

    private void btnSalvar2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSalvar2ActionPerformed
        Prompts prompt = new Prompts(TxtPrompt.getText());
        OllamaInterface ollamaInterface = new OllamaInterface();
        String testOutput;

        try {
            // Enviando o prompt para o modelo
            String promptWithCode = prompt.generateCode();
            
            
            // Troca o nome my.module
            if (nomeArquivoAberto != null && !nomeArquivoAberto.isEmpty()){
                promptWithCode = promptWithCode.replace("my_module", nomeArquivoAberto);
            }
            
            String response = ollamaInterface.GenerateTest(promptWithCode);

            // Exibindo a resposta na área de saída
            testOutput = response;

        } catch (Exception ex) {
            testOutput = "Error generating test cases: " + ex.getMessage();
        }
        TelaSaidaTeste telaSaida = new TelaSaidaTeste(diretorioSelecionado, nomeArquivoAberto);
        telaSaida.setVisible(true);
        telaSaida.jTextPane1.setText(testOutput);
    }// GEN-LAST:event_btnSalvar2ActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        JFrame frame = new JFrame("Abrir Arquivo");
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ApiInterface.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        }
        // </editor-fold>
        // </editor-fold>
        
        // </editor-fold>
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ApiInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane TxtPrompt;
    private javax.swing.JButton btnAbrir;
    private javax.swing.JButton btnSalvar2;
    private javax.swing.JButton btnSalvar3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
